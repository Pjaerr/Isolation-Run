{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Computer.svelte",
    "..\\..\\InfoModal.svelte",
    "..\\..\\Phone.svelte",
    "..\\..\\VideoSelection.svelte",
    "..\\..\\Video.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import InfoModal from \"./InfoModal.svelte\";\n  import Computer from \"./Computer.svelte\";\n  import Phone from \"./Phone.svelte\";\n\n  let mode;\n\n  let howToIsActive = false;\n</script>\n\n<style>\n  main {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n  }\n\n  em {\n    color: red;\n  }\n\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 2em;\n    width: 10em;\n    max-width: 95%;\n  }\n\n  button > svg {\n    margin-right: 5px;\n  }\n\n  .how-to-button {\n    font-size: 1em;\n    margin: 40px;\n    width: 11em;\n  }\n</style>\n\n<main>\n  {#if mode === 'COMPUTER'}\n    <Computer />\n  {:else if mode === 'PHONE'}\n    <Phone />\n  {:else}\n    <h1>\n      Welcome to Qua\n      <em>run</em>\n      tine. You'll need a phone and a computer to get started!\n    </h1>\n\n    <button class=\"how-to-button\" on:click={() => (howToIsActive = true)}>\n      How does this work?\n    </button>\n\n    {#if howToIsActive}\n      <InfoModal onClose={() => (howToIsActive = false)} />\n    {/if}\n\n    <h2>Which device is this?</h2>\n\n    <button on:click={() => (mode = 'COMPUTER')}>\n      <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n        <path\n          fill=\"#333\"\n          d=\"M21,14H3V4H21M21,2H3C1.89,2 1,2.89 1,4V16A2,2 0 0,0\n          3,18H10L8,21V22H16V21L14,18H21A2,2 0 0,0 23,16V4C23,2.89 22.1,2 21,2Z\" />\n      </svg>\n      Computer\n    </button>\n\n    <button on:click={() => (mode = 'PHONE')}>\n      <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n        <path\n          fill=\"#333\"\n          d=\"M17,19H7V5H17M17,1H7C5.89,1 5,1.89 5,3V21A2,2 0 0,0 7,23H17A2,2 0\n          0,0 19,21V3C19,1.89 18.1,1 17,1Z\" />\n      </svg>\n      Phone\n    </button>\n  {/if}\n</main>\n",
    "<script>\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n  import { isPaused } from \"./stores.js\";\r\n\r\n  import VideoSelection from \"./VideoSelection.svelte\";\r\n  import Video from \"./Video.svelte\";\r\n\r\n  let hasChosenVideo = false;\r\n  let selectedVideo;\r\n\r\n  const connectionCode = uuidv4().substring(0, 8);\r\n\r\n  let phoneWebSocketID = \"\";\r\n  let phoneHasConnected = false;\r\n\r\n  let socket;\r\n  let socketIsOpen = false;\r\n\r\n  function openConnection() {\r\n    socket = new WebSocket(\"wss://\" + location.host);\r\n\r\n    socket.onopen = e => {\r\n      if (socket.readyState === WebSocket.OPEN) {\r\n        socket.send(\r\n          JSON.stringify({\r\n            connectionCode,\r\n            messageType: \"connection\"\r\n          })\r\n        );\r\n      }\r\n    };\r\n\r\n    socket.onclose = e => {\r\n      location.reload();\r\n    };\r\n\r\n    socket.onmessage = e => {\r\n      const data = JSON.parse(e.data);\r\n\r\n      console.log(\"Received a message\");\r\n\r\n      if (data.messageType === \"connection\") {\r\n        phoneHasConnected = true;\r\n        phoneWebSocketID = data.id;\r\n\r\n        if (socket.readyState === WebSocket.OPEN) {\r\n          socket.send(\r\n            JSON.stringify({\r\n              connectionCode: connectionCode,\r\n              messageType: \"connection\"\r\n            })\r\n          );\r\n        }\r\n      } else if (data.messageType === \"playvideo\") {\r\n        isPaused.set(false);\r\n        console.log($isPaused);\r\n      } else if (data.messageType === \"pausevideo\") {\r\n        isPaused.set(true);\r\n        console.log($isPaused);\r\n      }\r\n    };\r\n\r\n    window.onbeforeunload = () => {\r\n      if (socket.readyState === WebSocket.OPEN) {\r\n        socket.send(\r\n          JSON.stringify({\r\n            partnerID: phoneWebSocketID,\r\n            messageType: \"connectionclosed\"\r\n          })\r\n        );\r\n      }\r\n    };\r\n  }\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n\r\n  .code {\r\n    color: #333;\r\n    font-size: 3em;\r\n  }\r\n\r\n  button {\r\n    margin-top: 20px;\r\n    font-size: 2em;\r\n    width: 10em;\r\n    max-width: 95%;\r\n  }\r\n</style>\r\n\r\n{#if !phoneHasConnected}\r\n  <a href=\"/\">Go back</a>\r\n{/if}\r\n\r\n{#if hasChosenVideo}\r\n  {#if phoneHasConnected}\r\n    <Video youtubeVideoID={selectedVideo} />\r\n  {:else}\r\n    <h1>Enter the following code on your phone to connect:</h1>\r\n    <h1 class=\"code\">{connectionCode}</h1>\r\n  {/if}\r\n{:else}\r\n  <h1>Choose predefined video/scene, or use your own:</h1>\r\n  <VideoSelection bind:selectedVideo />\r\n  <button\r\n    on:click={() => {\r\n      hasChosenVideo = true;\r\n      openConnection();\r\n    }}>\r\n    Choose Video\r\n  </button>\r\n{/if}\r\n",
    "<script>\r\n  import { slide } from \"svelte/transition\";\r\n  import { quintInOut } from \"svelte/easing\";\r\n\r\n  export let onClose;\r\n</script>\r\n\r\n<style>\r\n  .modal-overlay {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: #333;\r\n    opacity: 0.5;\r\n    z-index: 5;\r\n  }\r\n\r\n  .container {\r\n    position: fixed;\r\n    z-index: 10;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n  .modal {\r\n    padding: 10px;\r\n    overflow-y: scroll;\r\n    text-align: center;\r\n    border-radius: 7px;\r\n    background-color: #fff;\r\n    box-shadow: 0px 0.5px 2px rgba(0, 0, 0, 0.25);\r\n    height: 420px;\r\n  }\r\n\r\n  @media (min-width: 400px) {\r\n    .modal {\r\n      height: 520px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 820px) {\r\n    .container {\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n    }\r\n    .modal {\r\n      width: 820px;\r\n      height: 580px;\r\n    }\r\n  }\r\n\r\n  .header {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .header-back-button {\r\n    position: absolute;\r\n  }\r\n\r\n  .header-back-button > button {\r\n    width: 32px;\r\n    height: 32px;\r\n    padding: 0;\r\n    background: #f5f5f5;\r\n  }\r\n\r\n  .header-title {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n  }\r\n\r\n  .header-title > h1 {\r\n    margin: 0;\r\n    font-size: 1.4em;\r\n  }\r\n\r\n  .body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    font-size: 1.2em;\r\n    padding: 20px;\r\n  }\r\n\r\n  .body-intro {\r\n    margin: 20px;\r\n  }\r\n\r\n  .body-outro {\r\n    margin-top: 80px;\r\n  }\r\n\r\n  .body-tech {\r\n    margin-top: 20px;\r\n  }\r\n\r\n  .body-intro > em {\r\n    color: red;\r\n  }\r\n\r\n  .body-steps {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n</style>\r\n\r\n<div class=\"modal-overlay\" />\r\n<section\r\n  class=\"container\"\r\n  transition:slide={{ duration: 200, easing: quintInOut }}>\r\n  <div class=\"modal\">\r\n    <header class=\"header\">\r\n      <div class=\"header-back-button\">\r\n        <button on:click={onClose}>\r\n          <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\r\n            <path\r\n              fill=\"#333\"\r\n              d=\"M20,11V13H8L13.5,18.5L12.08,19.92L4.16,12L12.08,4.08L13.5,5.5L8,11H20Z\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n      <div class=\"header-title\">\r\n        <h1>How does this work?</h1>\r\n      </div>\r\n    </header>\r\n    <section class=\"body\">\r\n      <div class=\"body-intro\">\r\n        Qua\r\n        <em>run</em>\r\n        tine is a fun little website that lets you watch a video on your\r\n        computer but only when your phone detects that you are running.\r\n        Hopefully a fun way to keep fit whilst locked indoors!\r\n      </div>\r\n\r\n      <div class=\"body-steps\">\r\n        <div class=\"body-steps-step\">\r\n          <h2>Step 1:</h2>\r\n          On your computer (or whatever screen you want to watch the video on),\r\n          open this website and click on the\r\n          <b>Computer</b>\r\n          button.\r\n        </div>\r\n        <div class=\"body-steps-step\">\r\n          <h2>Step 2:</h2>\r\n          You can then select from a list of predefined videos of walks through\r\n          scenery, cities etc or you can select your own video by pasting in the\r\n          youtube video ID.\r\n        </div>\r\n        <div class=\"body-steps-step\">\r\n          <h2>Step 3:</h2>\r\n          Once you've done that, you should be presented with a code. Now you\r\n          must open this website on your phone and click\r\n          <b>Phone</b>\r\n          and then enter in the code you see on your computer.\r\n        </div>\r\n\r\n        <div class=\"body-outro\">\r\n          You can now start running with your phone in your hand and the video\r\n          will play! Remember to keep your phone screen unlocked for this to\r\n          work.\r\n        </div>\r\n\r\n        <div class=\"body-tech\">\r\n          This site was made using Svelte and Nodejs. It uses WebSockets to\r\n          connect your computer to your phone and sends a message over the\r\n          network when your phone's accelerometer detects that you're running.\r\n          <br />\r\n          <br />\r\n          The source code can be found\r\n          <a href=\"https://github.com/Pjaerr/QuaRUNtine\">here</a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</section>\r\n",
    "<script>\r\n  import gifs from \"./gifs.js\";\r\n\r\n  const gif = gifs[Math.floor(Math.random() * (gifs.length - 1 + 1))];\r\n\r\n  let connectionCode = \"\";\r\n  let desktopHasConnected = false;\r\n  let desktopWebSocketID = \"\";\r\n  let socketIsOpen = false;\r\n\r\n  let socket;\r\n\r\n  function openConnection() {\r\n    socket = new WebSocket(\"wss://\" + location.host);\r\n    socket.onopen = e => {\r\n      socketIsOpen = true;\r\n\r\n      if (socket.readyState === WebSocket.OPEN) {\r\n        socket.send(\r\n          JSON.stringify({\r\n            connectionCode: connectionCode,\r\n            messageType: \"connection\"\r\n          })\r\n        );\r\n      }\r\n    };\r\n\r\n    socket.onclose = e => {\r\n      location.reload();\r\n    };\r\n\r\n    socket.onmessage = e => {\r\n      const data = JSON.parse(e.data);\r\n\r\n      console.log(\"Received a message\");\r\n\r\n      if (data.messageType === \"connection\") {\r\n        desktopHasConnected = true;\r\n        desktopWebSocketID = data.id;\r\n      }\r\n    };\r\n\r\n    window.onbeforeunload = () => {\r\n      if (socket.readyState === WebSocket.OPEN) {\r\n        socket.send(\r\n          JSON.stringify({\r\n            partnerID: desktopWebSocketID,\r\n            messageType: \"connectionclosed\"\r\n          })\r\n        );\r\n      }\r\n\r\n      window.removeEventListener(\"devicemotion\", handleDeviceMotion);\r\n      window.removeEventListener(\"deviceorientation\", handleDeviceOrientation);\r\n    };\r\n  }\r\n\r\n  let yGravity = 0;\r\n  let threshold = 0.3;\r\n  let deviceWasLastMovingUpwards = false;\r\n  let deviceWasMoving = true;\r\n  let isDeviceMoving = false;\r\n\r\n  function handleDeviceMotion(e) {\r\n    yGravity = e.accelerationIncludingGravity.y;\r\n  }\r\n\r\n  function handleDeviceOrientation(e) {\r\n    if (yGravity - 10 * Math.sin((e.beta * Math.PI) / 180) > threshold) {\r\n      //We are moving the device up\r\n\r\n      deviceWasLastMovingUpwards = true;\r\n    } else if (\r\n      yGravity - 10 * Math.sin((e.beta * Math.PI) / 180) <\r\n      -threshold\r\n    ) {\r\n      //We are moving the device down\r\n\r\n      if (deviceWasLastMovingUpwards) {\r\n        //We have taken a \"step\"\r\n\r\n        isDeviceMoving = true;\r\n      }\r\n\r\n      deviceWasLastMovingUpwards = false;\r\n    } else {\r\n      isDeviceMoving = false;\r\n    }\r\n\r\n    if (isDeviceMoving && !deviceWasMoving) {\r\n      //Send \"playvideo\" event\r\n      if (socket.readyState === WebSocket.OPEN) {\r\n        socket.send(\r\n          JSON.stringify({\r\n            partnerID: desktopWebSocketID,\r\n            messageType: \"playvideo\"\r\n          })\r\n        );\r\n      }\r\n    } else if (!isDeviceMoving && deviceWasMoving) {\r\n      //Send \"pausevideo\" event\r\n      if (socket.readyState === WebSocket.OPEN) {\r\n        socket.send(\r\n          JSON.stringify({\r\n            partnerID: desktopWebSocketID,\r\n            messageType: \"pausevideo\"\r\n          })\r\n        );\r\n      }\r\n    }\r\n\r\n    deviceWasMoving = isDeviceMoving;\r\n  }\r\n\r\n  $: if (socketIsOpen && desktopHasConnected) {\r\n    window.addEventListener(\"devicemotion\", handleDeviceMotion);\r\n    window.addEventListener(\"deviceorientation\", handleDeviceOrientation);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n\r\n  input {\r\n    width: 20em;\r\n    height: 4em;\r\n    max-width: 95%;\r\n  }\r\n\r\n  button {\r\n    font-size: 2em;\r\n    width: 10em;\r\n    max-width: 95%;\r\n  }\r\n</style>\r\n\r\n{#if !desktopHasConnected}\r\n  <a href=\"/\">Go back</a>\r\n{/if}\r\n\r\n{#if !socketIsOpen || !desktopHasConnected}\r\n  <h1>\r\n    Visit this website on your desktop to find the code you need to enter here:\r\n  </h1>\r\n\r\n  <!-- svelte-ignore a11y-autofocus -->\r\n  <input\r\n    type=\"text\"\r\n    name=\"connectionCode\"\r\n    bind:value={connectionCode}\r\n    autocapitalize=\"off\"\r\n    autofocus />\r\n\r\n  <button on:click={openConnection}>Connect</button>\r\n{:else}\r\n  <h1>Keep your phone screen unlocked and start running! 🏃‍♀️</h1>\r\n  <img src={gif} alt=\"Gif of somebody running\" />\r\n{/if}\r\n",
    "<script>\r\n  export let selectedVideo = \"DHq0pLFavyc\";\r\n\r\n  let userDefinedVideo = false;\r\n</script>\r\n\r\n<style>\r\n  .video-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 40px;\r\n  }\r\n\r\n  .video-list > label {\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .option-switcher {\r\n    margin-bottom: 40px;\r\n  }\r\n</style>\r\n\r\n{#if userDefinedVideo}\r\n  <button\r\n    class=\"option-switcher\"\r\n    on:click={() => {\r\n      userDefinedVideo = false;\r\n      selectedVideo = 'DHq0pLFavyc';\r\n    }}>\r\n    Click here to choose from a list of videos\r\n  </button>\r\n  <div class=\"user-defined-video\">\r\n    <label>\r\n      YouTube Video ID (eg: youtube.com/watch?v=\r\n      <b>Hndf5JRwUL0</b>\r\n      ):\r\n      <input type=\"text\" bind:value={selectedVideo} />\r\n    </label>\r\n  </div>\r\n{:else}\r\n  <button\r\n    class=\"option-switcher\"\r\n    on:click={() => {\r\n      userDefinedVideo = true;\r\n      selectedVideo = '';\r\n    }}>\r\n    Click here to choose your own video\r\n  </button>\r\n\r\n  <b>\r\n    All videos courtesy of\r\n    <a href=\"https://www.youtube.com/channel/UCAcsAE1tpLuP3y7UhxUoWpQ\">\r\n      Rambalac\r\n    </a>\r\n  </b>\r\n\r\n  <div class=\"video-list\">\r\n    <label>\r\n      <input type=\"radio\" bind:group={selectedVideo} value=\"DHq0pLFavyc\" />\r\n      Tokyo Okutama Mountains\r\n    </label>\r\n\r\n    <label>\r\n      <input type=\"radio\" bind:group={selectedVideo} value=\"1aqM14CYb4Y\" />\r\n      Midtown Roppongi Hills\r\n    </label>\r\n\r\n    <label>\r\n      <input type=\"radio\" bind:group={selectedVideo} value=\"PLnELXJ-tLs\" />\r\n      Yokosuka Countryside\r\n    </label>\r\n\r\n    <label>\r\n      <input type=\"radio\" bind:group={selectedVideo} value=\"jW7SxamQS9M\" />\r\n      Hirosaki Winter\r\n    </label>\r\n\r\n    <label>\r\n      <input type=\"radio\" bind:group={selectedVideo} value=\"8mQ454kcPJY\" />\r\n      Beppu\r\n    </label>\r\n  </div>\r\n{/if}\r\n",
    "<script>\r\n  import { isPaused } from \"./stores.js\";\r\n\r\n  export let youtubeVideoID;\r\n\r\n  $: if ($isPaused === true) {\r\n    if (window.YOUTUBE_PLAYER_ISREADY) window.YOUTUBE_PLAYER.pauseVideo();\r\n  }\r\n\r\n  $: if ($isPaused === false) {\r\n    if (window.YOUTUBE_PLAYER_ISREADY) window.YOUTUBE_PLAYER.playVideo();\r\n  }\r\n</script>\r\n\r\n<style>\r\n  #youtube_player_iframe {\r\n    cursor: none;\r\n  }\r\n</style>\r\n\r\n<svelte:head>\r\n  <script src=\"https://www.youtube.com/iframe_api\">\r\n\r\n  </script>\r\n  <script>\r\n    window.onYouTubeIframeAPIReady = function() {\r\n      window.YOUTUBE_PLAYER = new YT.Player(\"youtube_player_iframe\", {\r\n        events: {\r\n          onReady: function() {\r\n            window.YOUTUBE_PLAYER_ISREADY = true;\r\n\r\n            setTimeout(function() {\r\n              window.YOUTUBE_PLAYER.pauseVideo();\r\n            }, 1000);\r\n          }\r\n        }\r\n      });\r\n    };\r\n  </script>\r\n</svelte:head>\r\n\r\n<iframe\r\n  title=\"youtube video\"\r\n  id=\"youtube_player_iframe\"\r\n  width=\"100%\"\r\n  height=\"100%\"\r\n  src=\"https://www.youtube.com/embed/{youtubeVideoID}?enablejsapi=1&origin=https://{location.host}&autoplay=1&modestbranding=1&showinfo=0&rel=0&iv_load_policy=3&fs=0&color=white&controls=0&mute=1\"\r\n  frameborder=\"0\"\r\n  allow=\"autoplay; encrypted-media;\" />\r\n"
  ],
  "names": [],
  "mappings": "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"
}