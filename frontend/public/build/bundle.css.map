{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Computer.svelte",
    "..\\..\\Phone.svelte",
    "..\\..\\VideoSelection.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Computer from \"./Computer.svelte\";\n  import Phone from \"./Phone.svelte\";\n  let mode;\n</script>\n\n<style>\n  main {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n\n  em {\n    color: red;\n  }\n\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 2em;\n    width: 10em;\n    max-width: 95%;\n  }\n\n  button > svg {\n    margin-right: 5px;\n  }\n</style>\n\n<main>\n  {#if mode === 'COMPUTER'}\n    <Computer />\n  {:else if mode === 'PHONE'}\n    <Phone />\n  {:else}\n    <h1>\n      Welcome to Qua\n      <em>run</em>\n      tine. You'll need a phone and a computer to get started!\n    </h1>\n\n    <h2>Which device is this?</h2>\n\n    <button on:click={() => (mode = 'COMPUTER')}>\n      <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n        <path\n          fill=\"#333\"\n          d=\"M21,14H3V4H21M21,2H3C1.89,2 1,2.89 1,4V16A2,2 0 0,0\n          3,18H10L8,21V22H16V21L14,18H21A2,2 0 0,0 23,16V4C23,2.89 22.1,2 21,2Z\" />\n      </svg>\n      Computer\n    </button>\n\n    <button on:click={() => (mode = 'PHONE')}>\n      <svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n        <path\n          fill=\"#333\"\n          d=\"M17,19H7V5H17M17,1H7C5.89,1 5,1.89 5,3V21A2,2 0 0,0 7,23H17A2,2 0\n          0,0 19,21V3C19,1.89 18.1,1 17,1Z\" />\n      </svg>\n      Phone\n    </button>\n  {/if}\n</main>\n",
    "<script>\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n  import { isPaused } from \"./stores.js\";\r\n\r\n  import VideoSelection from \"./VideoSelection.svelte\";\r\n  import Video from \"./Video.svelte\";\r\n\r\n  //The ID of this client's WebSocket\r\n  let id = uuidv4();\r\n\r\n  let hasChosenVideo = false;\r\n  let selectedVideo;\r\n\r\n  const connectionCode = uuidv4().substring(0, 8);\r\n\r\n  let phoneWebSocketID = \"\";\r\n  let phoneHasConnected = false;\r\n\r\n  let socket;\r\n  let socketIsOpen = false;\r\n\r\n  function openConnection() {\r\n    socket = new WebSocket(\"wss://\" + location.host);\r\n\r\n    socket.onopen = e => {\r\n      socket.send(\r\n        JSON.stringify({\r\n          id,\r\n          connectionCode,\r\n          messageType: \"connection\"\r\n        })\r\n      );\r\n    };\r\n\r\n    socket.onerror = e => {\r\n      console.error(e);\r\n    };\r\n\r\n    socket.onmessage = e => {\r\n      const data = JSON.parse(e.data);\r\n\r\n      if (data.messageType === \"connection\") {\r\n        if (data.connectionCode === connectionCode) {\r\n          phoneHasConnected = true;\r\n          phoneWebSocketID = data.id;\r\n\r\n          socket.send(\r\n            JSON.stringify({\r\n              id,\r\n              connectionCode: connectionCode,\r\n              messageType: \"connection\"\r\n            })\r\n          );\r\n        }\r\n      } else if (\r\n        data.messageType === \"connectionclosed\" &&\r\n        data.id === phoneWebSocketID\r\n      ) {\r\n        phoneHasConnected = false;\r\n        phoneWebSocketID = \"\";\r\n        socket.send(\r\n          JSON.stringify({\r\n            id,\r\n            messageType: \"connectionclosed\"\r\n          })\r\n        );\r\n        socket.close();\r\n        location.reload();\r\n      } else if (\r\n        data.messageType === \"playvideo\" &&\r\n        data.id === phoneWebSocketID\r\n      ) {\r\n        isPaused.set(false);\r\n        console.log($isPaused);\r\n      } else if (\r\n        data.messageType === \"pausevideo\" &&\r\n        data.id === phoneWebSocketID\r\n      ) {\r\n        isPaused.set(true);\r\n        console.log($isPaused);\r\n      }\r\n    };\r\n\r\n    window.onbeforeunload = () => {\r\n      socket.send(\r\n        JSON.stringify({\r\n          id,\r\n          messageType: \"connectionclosed\"\r\n        })\r\n      );\r\n      socket.close();\r\n    };\r\n  }\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n\r\n  .code {\r\n    color: #333;\r\n    font-size: 3em;\r\n  }\r\n\r\n  button {\r\n    margin-top: 20px;\r\n    font-size: 2em;\r\n    width: 10em;\r\n    max-width: 95%;\r\n  }\r\n</style>\r\n\r\n{#if !phoneHasConnected}\r\n  <a href=\"/\">Go back</a>\r\n{/if}\r\n\r\n{#if hasChosenVideo}\r\n  {#if phoneHasConnected}\r\n    <Video youtubeVideoID={selectedVideo} />\r\n  {:else}\r\n    <h1>Enter the following code on your phone to connect:</h1>\r\n    <h1 class=\"code\">{connectionCode}</h1>\r\n  {/if}\r\n{:else}\r\n  <h1>Choose predefined video/scene, or use your own:</h1>\r\n  <VideoSelection bind:selectedVideo />\r\n  <button\r\n    on:click={() => {\r\n      hasChosenVideo = true;\r\n      openConnection();\r\n    }}>\r\n    Choose Video\r\n  </button>\r\n{/if}\r\n",
    "<script>\r\n  import { v4 as uuidv4 } from \"uuid\";\r\n  import gifs from \"./gifs.js\";\r\n\r\n  const gif = gifs[Math.floor(Math.random() * (gifs.length - 1 + 1))];\r\n\r\n  let id = uuidv4();\r\n  let connectionCode = \"\";\r\n  let desktopHasConnected = false;\r\n  let desktopWebSocketID = \"\";\r\n  let socketIsOpen = false;\r\n\r\n  let socket;\r\n\r\n  function openConnection() {\r\n    socket = new WebSocket(\"wss://\" + location.host);\r\n    socket.onopen = e => {\r\n      socketIsOpen = true;\r\n      socket.send(\r\n        JSON.stringify({\r\n          id,\r\n          connectionCode: connectionCode,\r\n          messageType: \"connection\"\r\n        })\r\n      );\r\n    };\r\n\r\n    socket.onmessage = e => {\r\n      const data = JSON.parse(e.data);\r\n\r\n      if (\r\n        data.messageType === \"connection\" &&\r\n        data.connectionCode === connectionCode\r\n      ) {\r\n        desktopHasConnected = true;\r\n        desktopWebSocketID = data.id;\r\n      } else if (\r\n        data.messageType === \"connectionclosed\" &&\r\n        data.id === desktopWebSocketID\r\n      ) {\r\n        desktopWebSocketID = \"\";\r\n        desktopHasConnected = false;\r\n\r\n        socket.send(\r\n          JSON.stringify({\r\n            id,\r\n            messageType: \"connectionclosed\"\r\n          })\r\n        );\r\n\r\n        socket.close();\r\n        window.removeEventListener(\"devicemotion\", handleDeviceMotion);\r\n        location.reload();\r\n      }\r\n    };\r\n\r\n    window.onbeforeunload = () => {\r\n      socket.send(\r\n        JSON.stringify({\r\n          id,\r\n          messageType: \"connectionclosed\"\r\n        })\r\n      );\r\n\r\n      window.removeEventListener(\"devicemotion\", handleDeviceMotion);\r\n\r\n      socket.close();\r\n    };\r\n  }\r\n\r\n  let wasRunningPreviously = false;\r\n  let isRunning = false;\r\n\r\n  function handleDeviceMotion(e) {\r\n    const acceleration = e.acceleration;\r\n\r\n    let res = acceleration.x + acceleration.y + acceleration.z;\r\n\r\n    if (res > 5 || res < -5) {\r\n      isRunning = true;\r\n    } else {\r\n      isRunning = false;\r\n    }\r\n\r\n    if (isRunning && !wasRunningPreviously) {\r\n      socket.send(\r\n        JSON.stringify({\r\n          id,\r\n          messageType: \"playvideo\"\r\n        })\r\n      );\r\n    } else if (!isRunning && wasRunningPreviously) {\r\n      socket.send(\r\n        JSON.stringify({\r\n          id,\r\n          messageType: \"pausevideo\"\r\n        })\r\n      );\r\n    }\r\n\r\n    wasRunningPreviously = isRunning;\r\n  }\r\n\r\n  $: if (socketIsOpen && desktopHasConnected) {\r\n    window.addEventListener(\"devicemotion\", handleDeviceMotion);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n\r\n  input {\r\n    width: 20em;\r\n    height: 4em;\r\n    max-width: 95%;\r\n  }\r\n\r\n  button {\r\n    font-size: 2em;\r\n    width: 10em;\r\n    max-width: 95%;\r\n  }\r\n</style>\r\n\r\n{#if !desktopHasConnected}\r\n  <a href=\"/\">Go back</a>\r\n{/if}\r\n\r\n{#if !socketIsOpen || !desktopHasConnected}\r\n  <h1>\r\n    Visit this website on your desktop to find the code you need to enter here:\r\n  </h1>\r\n\r\n  <input\r\n    type=\"text\"\r\n    name=\"connectionCode\"\r\n    bind:value={connectionCode}\r\n    autocapitalize=\"off\"\r\n    autofocus />\r\n\r\n  <button on:click={openConnection}>Connect</button>\r\n{:else}\r\n  <h1>Keep your phone screen unlocked! üèÉ‚Äç‚ôÄÔ∏è</h1>\r\n  <img src={gif} alt=\"Gif of somebody running\" />\r\n{/if}\r\n",
    "<script>\r\n  export let selectedVideo = \"DHq0pLFavyc\";\r\n\r\n  let userDefinedVideo = false;\r\n</script>\r\n\r\n<style>\r\n  .video-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 40px;\r\n  }\r\n\r\n  .video-list > label {\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .option-switcher {\r\n    margin-bottom: 40px;\r\n  }\r\n</style>\r\n\r\n{#if userDefinedVideo}\r\n  <button\r\n    class=\"option-switcher\"\r\n    on:click={() => {\r\n      userDefinedVideo = false;\r\n      selectedVideo = 'DHq0pLFavyc';\r\n    }}>\r\n    Click here to choose from a list of videos\r\n  </button>\r\n  <div class=\"user-defined-video\">\r\n    <label>\r\n      YouTube Video ID (eg: youtube.com/watch?v=\r\n      <b>Hndf5JRwUL0</b>\r\n      ):\r\n      <input type=\"text\" bind:value={selectedVideo} />\r\n    </label>\r\n  </div>\r\n{:else}\r\n  <button\r\n    class=\"option-switcher\"\r\n    on:click={() => {\r\n      userDefinedVideo = true;\r\n      selectedVideo = '';\r\n    }}>\r\n    Click here to choose your own video\r\n  </button>\r\n\r\n  <b>\r\n    All videos courtesy of\r\n    <a href=\"https://www.youtube.com/channel/UCAcsAE1tpLuP3y7UhxUoWpQ\">\r\n      Rambalac\r\n    </a>\r\n  </b>\r\n\r\n  <div class=\"video-list\">\r\n    <label>\r\n      <input type=\"radio\" bind:group={selectedVideo} value=\"DHq0pLFavyc\" />\r\n      Tokyo Okutama Mountains\r\n    </label>\r\n\r\n    <label>\r\n      <input type=\"radio\" bind:group={selectedVideo} value=\"1aqM14CYb4Y\" />\r\n      Midtown Roppongi Hills\r\n    </label>\r\n\r\n    <label>\r\n      <input type=\"radio\" bind:group={selectedVideo} value=\"PLnELXJ-tLs\" />\r\n      Yokosuka Countryside\r\n    </label>\r\n\r\n    <label>\r\n      <input type=\"radio\" bind:group={selectedVideo} value=\"jW7SxamQS9M\" />\r\n      Hirosaki Winter\r\n    </label>\r\n\r\n    <label>\r\n      <input type=\"radio\" bind:group={selectedVideo} value=\"8mQ454kcPJY\" />\r\n      Beppu\r\n    </label>\r\n  </div>\r\n{/if}\r\n"
  ],
  "names": [],
  "mappings": "AAOE,IAAI,4BAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,MAAM,CAEhB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,EAAE,4BAAC,CAAC,AACF,KAAK,CAAE,GAAG,AACZ,CAAC,AAED,MAAM,4BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,GAAG,CACd,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,GAAG,AAChB,CAAC,AAED,oBAAM,CAAG,GAAG,cAAC,CAAC,AACZ,YAAY,CAAE,GAAG,AACnB,CAAC;AC+DD,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,GAAG,AAChB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,GAAG,CACd,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,GAAG,AAChB,CAAC;ACDD,EAAE,cAAC,CAAC,AACF,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,SAAS,CAAE,GAAG,AAChB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,GAAG,CACd,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,GAAG,AAChB,CAAC;ACpHD,WAAW,8BAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,IAAI,AACd,CAAC,AAED,0BAAW,CAAG,KAAK,eAAC,CAAC,AACnB,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,gBAAgB,8BAAC,CAAC,AAChB,aAAa,CAAE,IAAI,AACrB,CAAC"
}